class
A
{
  decl
    int f1(int a ,int b);
    int f1();
    int f2();
    
  enddecl
  int f1(int a ,int b) {                  
      begin
       write("In class A f1");
       return 1;
      end
  }
  int f1(){
    begin
      write("InAnoparams");
      return 1;
    end
  }
  int f2() {                  
      begin
        write("In class A f2");
        return 1;
      end
  }
}                   
B extends A
{
  decl
    int f7(int a,int b);
    int f3();
    int f1();
  enddecl

int f3() {                 
     begin
       write("In class B f3");
       return 1;
     end
}
int f1() {                 
     begin
       write("InBf1Noparams");
       return 1;
     end
}

}                     
C extends B
{
  decl
    int f1(int a,int b);
    int f3();
    int f4();
  enddecl
int f1(int a,int b) {               
     begin
       write("In class C f1");
       return 1;
     end
}
int f3() {               
    begin
       write("In class C f3");
       return 1;
    end
}
int f4() {              
    begin
       write("In class C f4");
       return 1;
    end
}



}                       
endclass

decl
    A obj ;
enddecl

int main() {
  decl
    int temp,n;
  enddecl
  begin
    temp= initialize();
    read(n);
    if(n < 0)then
        obj = new(A);
    else
        if(n == 0)then
            obj = new(B);
        else
            if(n > 0)then
                obj = new(C);
            endif;
       endif;
    endif;
   write(obj.f1(3));  
   write(obj.f1());         
    return 1;
  end
}